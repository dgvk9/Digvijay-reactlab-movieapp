{"ast":null,"code":"var _jsxFileName = \"/Users/dkumar7/Documents/Dev/React/MovieDB/movie-app/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Nav, Navbar, Container, Form, Button, FormControl, Row } from 'react-bootstrap';\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet api_key = \"&api_key=9a12f7bf2a75b481ed2612d8faf63a35\";\nlet baseUrl = \"https://api.themoviedb.org/3\";\nlet url = baseUrl + \"/discover/movie?primary_release_date.gte=2014-09-15&primary_release_date.lte=2014-10-22\" + api_key;\nlet arr = [\"Movies in theater\", \"Coming soon\", \"Top rated movies\", \"Kids\", \"Favorites\"];\n\nconst Main = () => {\n  _s();\n\n  const [movieData, setData] = useState([]);\n  const [url_set, setUrl] = useState(url);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    fetch(url_set).then(res => res.json()).then(data => {\n      //console.log(\"Ran fetch\");\n      setData(data.results);\n    });\n  }, [url_set]);\n\n  const getData = movieType => {\n    if (movieType === \"Movies in theater\") {\n      url = baseUrl + \"/discover/movie?primary_release_date.gte=2014-09-15&primary_release_date.lte=2014-10-22\" + api_key;\n    } else if (movieType === \"Coming soon\") {\n      url = baseUrl + \"/movie/upcoming?\" + api_key;\n    } else if (movieType === \"Top rated movies\") {\n      url = baseUrl + \"/discover/movie?sort_by=popularity.desc\" + api_key;\n    } else if (movieType === \"Kids\") {\n      url = baseUrl + \"/discover/movie?certification_country=US&certification.lte=G&sort_by=popularity.desc\" + api_key;\n    }\n\n    setUrl(url);\n  };\n\n  const searchMovie = evt => {\n    if (evt.key === \"Enter\") {\n      evt.preventDefault(); //console.log(\"Hello\"); \n\n      url = baseUrl + \"/search/movie?\" + api_key + \"&query=\" + search;\n      setUrl(url);\n      setSearch(\"\");\n    }\n  };\n\n  const showMovie = () => {\n    if (search.length !== 0) {\n      url = baseUrl + \"/search/movie?\" + api_key + \"&query=\" + search;\n      setUrl(url);\n      setSearch(\"\");\n    }\n\n    setUrl(url);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"light\",\n        expand: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n            \"aria-controls\": \"navbarScroll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n            id: \"navbarScroll\",\n            children: [/*#__PURE__*/_jsxDEV(Nav, {\n              className: \"me-auto my-2 my-lg-0\",\n              style: {\n                maxHeight: '100px'\n              },\n              navbarScroll: true,\n              children: arr.map((value, idx) => {\n                return /*#__PURE__*/_jsxDEV(Nav.Link, {\n                  href: \"#\",\n                  name: value,\n                  onClick: e => getData(e.target.name),\n                  children: value\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"search\",\n                placeholder: \"Search movies\",\n                className: \"me-2\",\n                \"aria-label\": \"Search\",\n                onChange: e => {\n                  setSearch(e.target.value);\n                },\n                value: search,\n                onKeyPress: searchMovie\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-success\",\n                value: search,\n                onClick: showMovie,\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mx-2\",\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 2,\n        md: 4,\n        className: \"g-4\",\n        children: movieData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"notfound\",\n          children: \"Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 44\n        }, this) : movieData.map((res, pos) => {\n          return /*#__PURE__*/_jsxDEV(MovieCard, {\n            info: res\n          }, pos, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"oGI7t8jHrR29byxsHXowftqgrBU=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/dkumar7/Documents/Dev/React/MovieDB/movie-app/src/components/Main.js"],"names":["useEffect","useState","Nav","Navbar","Container","Form","Button","FormControl","Row","MovieCard","api_key","baseUrl","url","arr","Main","movieData","setData","url_set","setUrl","search","setSearch","fetch","then","res","json","data","results","getData","movieType","searchMovie","evt","key","preventDefault","showMovie","length","maxHeight","map","value","idx","e","target","name","pos"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,IAAjC,EAAuCC,MAAvC,EAA+CC,WAA/C,EAA4DC,GAA5D,QAAsE,iBAAtE;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,IAAIC,OAAO,GAAG,2CAAd;AACA,IAAIC,OAAO,GAAG,8BAAd;AACA,IAAIC,GAAG,GAAGD,OAAO,GAAC,yFAAR,GAAkGD,OAA5G;AAEA,IAAIG,GAAG,GAAG,CAAC,mBAAD,EAAsB,aAAtB,EAAqC,kBAArC,EAA0D,MAA1D,EAAkE,WAAlE,CAAV;;AAIA,MAAMC,IAAI,GAAG,MAAI;AAAA;;AACb,QAAM,CAAEC,SAAF,EAAaC,OAAb,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAEgB,OAAF,EAAWC,MAAX,IAAsBjB,QAAQ,CAACW,GAAD,CAApC;AACA,QAAM,CAAEO,MAAF,EAAUC,SAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AAGAD,EAAAA,SAAS,CAAC,MAAI;AACVqB,IAAAA,KAAK,CAACJ,OAAD,CAAL,CAAeK,IAAf,CAAoBC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAAzB,EAAqCF,IAArC,CAA0CG,IAAI,IAAE;AAC5C;AACAT,MAAAA,OAAO,CAAES,IAAI,CAACC,OAAP,CAAP;AACH,KAHD;AAIH,GALQ,EAKN,CAACT,OAAD,CALM,CAAT;;AAQA,QAAMU,OAAO,GAAIC,SAAD,IAAc;AAC1B,QAAGA,SAAS,KAAG,mBAAf,EAAmC;AAC/BhB,MAAAA,GAAG,GAAED,OAAO,GAAC,yFAAR,GAAkGD,OAAvG;AACH,KAFD,MAEM,IAAIkB,SAAS,KAAG,aAAhB,EAA+B;AACjChB,MAAAA,GAAG,GAAED,OAAO,GAAC,kBAAR,GAA2BD,OAAhC;AACH,KAFK,MAEA,IAAIkB,SAAS,KAAG,kBAAhB,EAAoC;AACtChB,MAAAA,GAAG,GAAED,OAAO,GAAC,yCAAR,GAAkDD,OAAvD;AACH,KAFK,MAEA,IAAIkB,SAAS,KAAG,MAAhB,EAAwB;AAC1BhB,MAAAA,GAAG,GAAED,OAAO,GAAC,sFAAR,GAA+FD,OAApG;AACH;;AAEDQ,IAAAA,MAAM,CAACN,GAAD,CAAN;AACH,GAZD;;AAcA,QAAMiB,WAAW,GAAIC,GAAD,IAAO;AACvB,QAAIA,GAAG,CAACC,GAAJ,KAAU,OAAd,EAAsB;AAClBD,MAAAA,GAAG,CAACE,cAAJ,GADkB,CAElB;;AACApB,MAAAA,GAAG,GAAED,OAAO,GAAC,gBAAR,GAAyBD,OAAzB,GAAiC,SAAjC,GAA2CS,MAAhD;AACAD,MAAAA,MAAM,CAACN,GAAD,CAAN;AACAQ,MAAAA,SAAS,CAAC,EAAD,CAAT;AACH;AAEJ,GATD;;AAWA,QAAMa,SAAS,GAAG,MAAI;AAElB,QAAGd,MAAM,CAACe,MAAP,KAAgB,CAAnB,EAAqB;AACjBtB,MAAAA,GAAG,GAAED,OAAO,GAAC,gBAAR,GAAyBD,OAAzB,GAAiC,SAAjC,GAA2CS,MAAhD;AACAD,MAAAA,MAAM,CAACN,GAAD,CAAN;AACAQ,MAAAA,SAAS,CAAC,EAAD,CAAT;AACH;;AACDF,IAAAA,MAAM,CAACN,GAAD,CAAN;AACH,GARD;;AAWA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACA,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAmB,QAAA,MAAM,EAAC,IAA1B;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,KAAK,MAAhB;AAAA,kCACI,QAAC,MAAD,CAAQ,MAAR;AAAe,6BAAc;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD,CAAQ,QAAR;AAAiB,YAAA,EAAE,EAAC,cAApB;AAAA,oCACI,QAAC,GAAD;AACI,cAAA,SAAS,EAAC,sBADd;AAEI,cAAA,KAAK,EAAE;AAAEuB,gBAAAA,SAAS,EAAE;AAAb,eAFX;AAGI,cAAA,YAAY,MAHhB;AAAA,wBAMQtB,GAAG,CAACuB,GAAJ,CAAQ,CAACC,KAAD,EAAQC,GAAR,KAAc;AAClB,oCACI,QAAC,GAAD,CAAK,IAAL;AAAU,kBAAA,IAAI,EAAC,GAAf;AAAmB,kBAAA,IAAI,EAAED,KAAzB;AAAgC,kBAAA,OAAO,EAAGE,CAAD,IAAKZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,IAAV,CAArD;AAAA,4BACKJ;AADL,mBAA2EC,GAA3E;AAAA;AAAA;AAAA;AAAA,wBADJ;AAKH,eAND;AANR;AAAA;AAAA;AAAA;AAAA,oBADJ,eAgBI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,QAAhB;AAAA,sCACI,QAAC,WAAD;AACI,gBAAA,IAAI,EAAC,QADT;AAEI,gBAAA,WAAW,EAAC,eAFhB;AAGI,gBAAA,SAAS,EAAC,MAHd;AAII,8BAAW,QAJf;AAKI,gBAAA,QAAQ,EAAGC,CAAD,IAAK;AAACnB,kBAAAA,SAAS,CAACmB,CAAC,CAACC,MAAF,CAASH,KAAV,CAAT;AAA0B,iBAL9C;AAMI,gBAAA,KAAK,EAAElB,MANX;AAOI,gBAAA,UAAU,EAAEU;AAPhB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAWI,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,iBAAhB;AACI,gBAAA,KAAK,EAAEV,MADX;AAEI,gBAAA,OAAO,EAAEc,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,eA2CI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3CJ,eA4CI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAA,kBAEKlB,SAAS,CAACmB,MAAV,KAAmB,CAApB,gBAAuB;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvB,GAA8DnB,SAAS,CAACqB,GAAV,CAAc,CAACb,GAAD,EAAMmB,GAAN,KAAY;AACpF,8BACQ,QAAC,SAAD;AAAW,YAAA,IAAI,EAAEnB;AAAjB,aAA2BmB,GAA3B;AAAA;AAAA;AAAA;AAAA,kBADR;AAGH,SAJ6D;AAFlE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA5CJ;AAAA,kBADJ;AA4DH,CA9GD;;GAAM5B,I;;KAAAA,I;AAgHN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Nav, Navbar, Container, Form, Button, FormControl, Row} from 'react-bootstrap'\nimport MovieCard from './MovieCard';\n\nlet api_key = \"&api_key=9a12f7bf2a75b481ed2612d8faf63a35\";\nlet baseUrl = \"https://api.themoviedb.org/3\";\nlet url = baseUrl+\"/discover/movie?primary_release_date.gte=2014-09-15&primary_release_date.lte=2014-10-22\"+api_key;\n\nlet arr = [\"Movies in theater\", \"Coming soon\", \"Top rated movies\" , \"Kids\", \"Favorites\"];\n\n\n\nconst Main = ()=>{\n    const [ movieData, setData] = useState([]);\n    const [ url_set, setUrl ] = useState(url);\n    const [ search, setSearch ] = useState('');\n\n\n    useEffect(()=>{\n        fetch(url_set).then(res=>res.json()).then(data=>{\n            //console.log(\"Ran fetch\");\n            setData( data.results );\n        });\n    }, [url_set])\n\n\n    const getData = (movieType) =>{\n        if(movieType===\"Movies in theater\"){\n            url= baseUrl+\"/discover/movie?primary_release_date.gte=2014-09-15&primary_release_date.lte=2014-10-22\"+api_key;\n        }else if (movieType===\"Coming soon\") {\n            url= baseUrl+\"/movie/upcoming?\"+api_key;\n        }else if (movieType===\"Top rated movies\") {\n            url= baseUrl+\"/discover/movie?sort_by=popularity.desc\"+api_key;\n        }else if (movieType===\"Kids\") {\n            url= baseUrl+\"/discover/movie?certification_country=US&certification.lte=G&sort_by=popularity.desc\"+api_key;\n        }\n    \n        setUrl(url)\n    }\n\n    const searchMovie = (evt)=>{\n        if (evt.key===\"Enter\"){\n            evt.preventDefault();\n            //console.log(\"Hello\"); \n            url= baseUrl+\"/search/movie?\"+api_key+\"&query=\"+search\n            setUrl(url);\n            setSearch(\"\");\n        }\n        \n    }\n\n    const showMovie = ()=>{\n\n        if(search.length!==0){\n            url= baseUrl+\"/search/movie?\"+api_key+\"&query=\"+search\n            setUrl(url);\n            setSearch(\"\");\n        }\n        setUrl(url);\n    }\n\n\n    return (\n        <>\n            <div className='header'>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Container fluid>\n                    <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                    <Navbar.Collapse id=\"navbarScroll\">\n                        <Nav\n                            className=\"me-auto my-2 my-lg-0\"\n                            style={{ maxHeight: '100px' }}\n                            navbarScroll\n                        >\n                            {\n                                arr.map((value, idx)=>{\n                                    return(\n                                        <Nav.Link href=\"#\" name={value} onClick={(e)=>getData(e.target.name)} key={idx}>\n                                            {value}\n                                        </Nav.Link>\n                                    )\n                                })\n                            }\n                        </Nav>\n                        <Form className=\"d-flex\">\n                            <FormControl\n                                type=\"search\"\n                                placeholder=\"Search movies\"\n                                className=\"me-2\"\n                                aria-label=\"Search\"\n                                onChange={(e)=>{setSearch(e.target.value)}}\n                                value={search}\n                                onKeyPress={searchMovie}\n                        \n                            />\n                            <Button variant=\"outline-success\" \n                                value={search}\n                                onClick={showMovie}\n                            >\n                                Search\n                            </Button> \n                        </Form>\n                    </Navbar.Collapse>\n                </Container>\n                </Navbar>\n            </div>\n            <h2 className='mx-2'>Movies</h2>\n            <div className='container'>\n                <Row xs={2} md={4} className=\"g-4\">\n                {\n                    (movieData.length===0)?<p className='notfound'>Not Found</p>: movieData.map((res, pos)=>{\n                        return(\n                                <MovieCard info={res} key={pos}/>\n                        )\n                    })\n                \n                }\n                </Row>\n            </div>\n        \n        </>\n    )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}